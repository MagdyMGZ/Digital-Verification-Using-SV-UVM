Coverage Report by instance with details

=================================================================================
=== Instance: /SPI_RAM_TOP/r_if
=== Design Unit: work.RAM_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        43         1    97.72%

================================Toggle Details================================

Toggle Coverage for instance /SPI_RAM_TOP/r_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                            din[9]           0           1       50.00 
                                          din[8-0]           1           1      100.00 
                                         dout[7-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         22 
Toggled Node Count   =         21 
Untoggled Node Count =          1 

Toggle Coverage      =      97.72% (43 of 44 bins)

=================================================================================
=== Instance: /SPI_RAM_TOP/dut_inst/SVA_inst
=== Design Unit: work.SPI_RAM_SVA
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_11
                     SPI_RAM_SVA.sv(12)                 0          1
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_00_01
                     SPI_RAM_SVA.sv(23)                 0          1
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_10
                     SPI_RAM_SVA.sv(34)                 0          1

Directive Coverage:
    Directives                       3         3         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_11 SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(11)
                                                                               255 Covered   
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_00_01 
                                         SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(22)
                                                                               513 Covered   
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_10 SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(33)
                                                                               256 Covered   

=================================================================================
=== Instance: /SPI_RAM_TOP/dut_inst
=== Design Unit: work.SPI_RAM_AFTER
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         8         0   100.00%

================================Branch Details================================

Branch Coverage for instance /SPI_RAM_TOP/dut_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_AFTER.sv
------------------------------------IF Branch------------------------------------
    5                                       1029     Count coming in to IF
    5               1                          2     	if (!r_if.rst_n) begin
    14              1                       1025     	else if (r_if.rx_valid) begin
                                               2     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    15                                      1025     Count coming in to IF
    15              1                        256     		if (r_if.din[9:8] == 2'b00) begin
    19              1                        256     		else if (r_if.din[9:8] == 2'b01) begin
    23              1                        256     		else if (r_if.din[9:8] == 2'b10) begin
    27              1                        256     		else if (r_if.din[9:8] == 2'b11) begin
    31              1                          1     		else begin
Branch totals: 5 hits of 5 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /SPI_RAM_TOP/dut_inst --

  File SPI_RAM_AFTER.sv
----------------Focused Condition View-------------------
Line       15 Item    1  (r_if.din[9:8] == 0)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (r_if.din[9:8] == 0)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (r_if.din[9:8] == 0)_0  -                             
  Row   2:          1  (r_if.din[9:8] == 0)_1  -                             

----------------Focused Condition View-------------------
Line       19 Item    1  (r_if.din[9:8] == 1)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (r_if.din[9:8] == 1)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (r_if.din[9:8] == 1)_0  -                             
  Row   2:          1  (r_if.din[9:8] == 1)_1  -                             

----------------Focused Condition View-------------------
Line       23 Item    1  (r_if.din[9:8] == 2)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (r_if.din[9:8] == 2)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (r_if.din[9:8] == 2)_0  -                             
  Row   2:          1  (r_if.din[9:8] == 2)_1  -                             

----------------Focused Condition View-------------------
Line       27 Item    1  (r_if.din[9:8] == 3)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (r_if.din[9:8] == 3)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (r_if.din[9:8] == 3)_0  -                             
  Row   2:          1  (r_if.din[9:8] == 3)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        18         0   100.00%

================================Statement Details================================

Statement Coverage for instance /SPI_RAM_TOP/dut_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_AFTER.sv
    1                                                module SPI_RAM_AFTER (RAM_if.DUT r_if);
    2                                                reg [r_if.ADDR_SIZE-1:0] addr_rd, addr_wr;
    3                                                reg [7:0] mem [r_if.MEM_DEPTH-1:0];
    4               1                       1029     always @(posedge r_if.clk or negedge r_if.rst_n) begin
    5                                                	if (!r_if.rst_n) begin
    6               1                          2     		for (int i = 0 ; i < r_if.MEM_DEPTH ; i = i + 1) begin
    6               2                        512     
    7               1                        512     			mem [i] <= 0;
    8                                                		end
    9               1                          2     		r_if.dout <= 0;
    10              1                          2     		r_if.tx_valid <= 0;
    11              1                          2     		addr_rd <= 0;
    12              1                          2     		addr_wr <= 0;
    13                                               	end
    14                                               	else if (r_if.rx_valid) begin
    15                                               		if (r_if.din[9:8] == 2'b00) begin
    16              1                        256     			addr_wr <= r_if.din[7:0];
    17              1                        256     			r_if.tx_valid <= 0;
    18                                               		end
    19                                               		else if (r_if.din[9:8] == 2'b01) begin
    20              1                        256     			mem [addr_wr] <= r_if.din[7:0];
    21              1                        256     			r_if.tx_valid <= 0;
    22                                               		end
    23                                               		else if (r_if.din[9:8] == 2'b10) begin
    24              1                        256     			addr_rd <= r_if.din[7:0];
    25              1                        256     			r_if.tx_valid <= 0;
    26                                               		end
    27                                               		else if (r_if.din[9:8] == 2'b11) begin
    28              1                        256     			r_if.dout <= mem[addr_rd];
    29              1                        256     			r_if.tx_valid <= 1;
    30                                               		end
    31                                               		else begin
    32              1                          1     			r_if.dout <= 0;
    33              1                          1     			r_if.tx_valid <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         32        32         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /SPI_RAM_TOP/dut_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                      addr_rd[7-0]           1           1      100.00 
                                      addr_wr[7-0]           1           1      100.00 

Total Node Count     =         16 
Toggled Node Count   =         16 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (32 of 32 bins)

=================================================================================
=== Instance: /SPI_RAM_TOP/tb_inst
=== Design Unit: work.SPI_RAM_TB
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_RAM_TOP/tb_inst/#anonblk#73511026#25#4#/#ublk#73511026#25/immed__26
                     SPI_RAM_TB.sv(26)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         2         2    50.00%

================================Branch Details================================

Branch Coverage for instance /SPI_RAM_TOP/tb_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_TB.sv
------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1       if((r_if.dout === 0) && (r_if.tx_valid === 0) && (dut_inst.addr_rd === 0) && (dut_inst.addr_wr === 0)) begin
    53              1                    ***0***       else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                       256     Count coming in to IF
    78              1                        256       if( r_if.dout === ass_addr_to_data[dyn_addr[i]] ) begin
    82              1                    ***0***       else begin
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       5         0         5     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_RAM_TOP/tb_inst --

  File SPI_RAM_TB.sv
----------------Focused Condition View-------------------
Line       49 Item    1  ((((r_if.dout === 0) && (r_if.tx_valid === 1'b0)) && (dut_inst.addr_rd === 0)) && (dut_inst.addr_wr === 0))
Condition totals: 0 of 4 input terms covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
         (r_if.dout === 0)         N  '_0' not hit             Hit '_0'
  (r_if.tx_valid === 1'b0)         N  '_0' not hit             Hit '_0'
  (dut_inst.addr_rd === 0)         N  '_0' not hit             Hit '_0'
  (dut_inst.addr_wr === 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (r_if.dout === 0)_0         -                             
  Row   2:          1  (r_if.dout === 0)_1         ((dut_inst.addr_wr === 0) && (dut_inst.addr_rd === 0) && (r_if.tx_valid === 1'b0))
  Row   3:    ***0***  (r_if.tx_valid === 1'b0)_0  (r_if.dout === 0)             
  Row   4:          1  (r_if.tx_valid === 1'b0)_1  ((dut_inst.addr_wr === 0) && (dut_inst.addr_rd === 0) && (r_if.dout === 0))
  Row   5:    ***0***  (dut_inst.addr_rd === 0)_0  ((r_if.dout === 0) && (r_if.tx_valid === 1'b0))
  Row   6:          1  (dut_inst.addr_rd === 0)_1  ((dut_inst.addr_wr === 0) && ((r_if.dout === 0) && (r_if.tx_valid === 1'b0)))
  Row   7:    ***0***  (dut_inst.addr_wr === 0)_0  (((r_if.dout === 0) && (r_if.tx_valid === 1'b0)) && (dut_inst.addr_rd === 0))
  Row   8:          1  (dut_inst.addr_wr === 0)_1  (((r_if.dout === 0) && (r_if.tx_valid === 1'b0)) && (dut_inst.addr_rd === 0))

----------------Focused Condition View-------------------
Line       78 Item    1  (r_if.dout === ass_addr_to_data[dyn_addr[i]])
Condition totals: 0 of 1 input term covered = 0.00%

                                     Input Term   Covered  Reason for no coverage   Hint
                                    -----------  --------  -----------------------  --------------
  (r_if.dout === ass_addr_to_data[dyn_addr[i]])         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                       Non-masking condition(s)      
 ---------  ---------  --------------------                             -------------------------     
  Row   1:    ***0***  (r_if.dout === ass_addr_to_data[dyn_addr[i]])_0  -                             
  Row   2:          1  (r_if.dout === ass_addr_to_data[dyn_addr[i]])_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      52        48         4    92.30%

================================Statement Details================================

Statement Coverage for instance /SPI_RAM_TOP/tb_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_TB.sv
    3                                                module SPI_RAM_TB (RAM_if.TEST r_if);
    4                                                
    5                                                parameter test_case = 256;
    6                                                
    7               1                          1     SPI_RAM_CLASS s1 = new();
    8                                                
    9                                                bit [7:0] dyn_addr []; // dynamic array to carry randmoized addresses
    10                                               bit [7:0] dyn_data []; // dynamic array to carry randmoized data
    11                                               
    12                                               logic [7:0] ass_addr_to_data [ bit[7:0] ]; // our reference model
    13                                               
    14                                               int correct_count = 0;
    15                                               int error_count = 0;
    16                                               
    17                                               initial begin
    18              1                          1       r_if.rst_n = 1'b1;
    19              1                          1       dyn_addr = new[test_case];
    20              1                          1       dyn_data = new[test_case];
    21              1                          1       r_if.rx_valid = 1;
    22              1                          1       r_if.din = 10'bxxxxx_xxxxx; // To Achieve Branch Coverage to be 100 %
    23              1                          1       @(negedge r_if.clk);
    24              1                          1       r_if.rx_valid = 0;
    25              1                          1     for(int i = 0 ; i < test_case ; i++) begin
    25              2                        256     
    26                                                 assert(s1.randomize());
    27              1                        256       dyn_addr[i] = s1.addr;
    28              1                        256       dyn_data[i] = s1.data;
    29              1                        256       s1.DIN_CHK.sample();
    30                                               end
    31                                               
    32              1                          1     for(int i = 0 ; i < test_case ; i++) begin
    32              2                        256     
    33              1                        256      ass_addr_to_data[dyn_addr[i]] = dyn_data[i];
    34                                               end
    35              1                          1       RST();
    36              1                          1       WRITE_TASK();
    37              1                          1       @(negedge r_if.clk);
    38              1                          1       READ_CHECK_TASK();
    39              1                          1       $display("----------------------------------------------------");
    40              1                          1       $display("the number of successful reading operations = %0d " , correct_count);
    41              1                          1       $display("the number of failed reading operations = %0d " , error_count);
    42              1                          1     $stop;
    43                                               end
    44                                               
    45                                               task RST();
    46              1                          1       @(negedge r_if.clk);
    47              1                          1       r_if.rst_n = 1'b0;
    48              1                          1       @(negedge r_if.clk);
    49                                                 if((r_if.dout === 0) && (r_if.tx_valid === 0) && (dut_inst.addr_rd === 0) && (dut_inst.addr_wr === 0)) begin
    50              1                          1         $display("Reset Operation Done Correctly");
    51              1                          1         correct_count = correct_count + 1;
    52                                                  end
    53                                                 else begin
    54              1                    ***0***         $display("Reset Operation Doesn't Done Correctly");
    55              1                    ***0***         error_count = error_count + 1;
    56                                                  end
    57              1                          1       r_if.rst_n = 1'b1;
    58                                               endtask
    59                                               
    60                                               task WRITE_TASK();
    61              1                          1      r_if.rx_valid = 1'b1;
    62              1                          1      for(int i = 0 ; i < test_case ; i++) begin
    62              2                        256     
    63              1                        256       r_if.din = { 2'b00,dyn_addr[i] };
    64              1                        256       @(negedge r_if.clk);
    65              1                        256       r_if.din = { 2'b01,dyn_data[i] };
    66              1                        256       @(negedge r_if.clk);
    67                                                end
    68              1                          1      r_if.rx_valid = 1'b0;
    69                                               endtask
    70                                               
    71                                               task READ_CHECK_TASK();
    72              1                          1       r_if.rx_valid = 1'b1;
    73              1                          1     for(int i = 0 ; i < test_case ; i++) begin
    73              2                        256     
    74              1                        256       r_if.din = { 2'b10,dyn_addr[i] };
    75              1                        256       @(negedge r_if.clk);
    76              1                        256       r_if.din = { 2'b11,8'b11111111 };
    77              1                        256       @(posedge r_if.tx_valid);
    78                                                 if( r_if.dout === ass_addr_to_data[dyn_addr[i]] ) begin
    79              1                        256         $display("successful reading");
    80              1                        256         correct_count = correct_count + 1;
    81                                                  end
    82                                                 else begin
    83              1                    ***0***         $display("failed reading");
    84              1                    ***0***         error_count = error_count + 1;
    85                                                  end
    86              1                        256        @(negedge r_if.clk);

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        128        17       111    13.28%

================================Toggle Details================================

Toggle Coverage for instance /SPI_RAM_TOP/tb_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                correct_count[0-7]           1           1      100.00 
                                  correct_count[8]           0           1       50.00 
                               correct_count[9-31]           0           0        0.00 
                                 error_count[0-31]           0           0        0.00 

Total Node Count     =         64 
Toggled Node Count   =          8 
Untoggled Node Count =         56 

Toggle Coverage      =      13.28% (17 of 128 bins)

=================================================================================
=== Instance: /SPI_RAM_TOP
=== Design Unit: work.SPI_RAM_TOP
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /SPI_RAM_TOP --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_TOP.sv
    2                                                module SPI_RAM_TOP();
    3                                                bit clk;
    4                                                
    5                                                parameter CLK_PERIOD = 10;
    6                                                
    7                                                initial begin
    8               1                          1         clk = 0;
    9               1                          1         forever begin
    10              1                       2057             #(CLK_PERIOD/2)
    11              1                       2056             clk = ~clk;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /SPI_RAM_TOP --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /SPI_RAM_PACKAGE
=== Design Unit: work.SPI_RAM_PACKAGE
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          1        na        na        na
            Covergroup Bins          2         2         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_RAM_PACKAGE/SPI_RAM_CLASS/DIN_CHK          100.00%        100          -    Covered              
    covered/total bins:                                     2          2          -                      
    missing/total bins:                                     0          2          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint addr_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin max_addr                                        1          1          -    Covered              
        bin zero_addr                                       1          1          -    Covered              
        default bin others                                254                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /SPI_RAM_PACKAGE --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM_PACKAGE.sv
    1                                                package SPI_RAM_PACKAGE;
    2                                                
    3                                                class SPI_RAM_CLASS;
    4                                                randc bit [7:0] addr;
    5                                                rand  bit [7:0] data;
    6                                                
    7                                                covergroup DIN_CHK;
    8                                                    // Check That Address will cover all the RAM locations by hitting
    9                                                    // All addr values [0:255] Increamently Which Excersice All Addresses Values
    10                                                   addr_cp : coverpoint addr
    11                                                   {
    12                                                       bins max_addr = {255};
    13                                                       bins zero_addr = {0};
    14                                                       bins others = default;
    15                                                   }
    16                                               endgroup
    17                                               
    18                                               function new;
    19              1                          1         DIN_CHK = new();    


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_RAM_PACKAGE/SPI_RAM_CLASS/DIN_CHK          100.00%        100          -    Covered              
    covered/total bins:                                     2          2          -                      
    missing/total bins:                                     0          2          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint addr_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin max_addr                                        1          1          -    Covered              
        bin zero_addr                                       1          1          -    Covered              
        default bin others                                254                     -    Occurred             

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_11 SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(11)
                                                                               255 Covered   
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_00_01 
                                         SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(22)
                                                                               513 Covered   
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_chk_10 SPI_RAM_SVA Verilog  SVA  SPI_RAM_SVA.sv(33)
                                                                               256 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 3

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_11
                     SPI_RAM_SVA.sv(12)                 0          1
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_00_01
                     SPI_RAM_SVA.sv(23)                 0          1
/SPI_RAM_TOP/dut_inst/SVA_inst/tx_asser_10
                     SPI_RAM_SVA.sv(34)                 0          1
/SPI_RAM_TOP/tb_inst/#anonblk#73511026#25#4#/#ublk#73511026#25/immed__26
                     SPI_RAM_TB.sv(26)                  0          1

Total Coverage By Instance (filtered view): 79.56%

